// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id() @default(uuid())

  username String
  email    String @unique
  password String

  isAdmin     Boolean @default(false)
  isApplicant Boolean @default(false)
  isHiring    Boolean @default(false)

  createdAt DateTime           @default(now())
  Applicant ApplicantProfile[]
  Company   Company[]
}

model Company {
  id String @id() @default(uuid())

  userId String
  User   User   @relation(fields: [userId], references: [id])

  companyName    String
  domain         String
  operatingSince DateTime
  country        String
  mainLocation   String

  longitude Decimal
  latitutde Decimal

  logoUrl String?

  createdAt    DateTime       @default(now())
  Vacancy      Vacancy[]
  Applications Applications[]
}

enum WorkType {
  remote
  on_office
}

model Vacancy {
  id              String @id() @default(uuid())
  title           String
  description     String @db.LongText
  numbersExpected Int

  companyId String
  Company   Company @relation(fields: [companyId], references: [id])

  type WorkType

  finalDate    DateTime
  createdAt    DateTime       @default(now())
  Applications Applications[]
}

model ApplicantProfile {
  id String @id() @default(uuid())

  userId String
  User   User   @relation(fields: [userId], references: [id])

  professionalTitle String
  country           String
  city              String
  yearsOfExperience Decimal

  photoUrl  String?
  resumeUrl String?

  createdAt    DateTime       @default(now())
  Applications Applications[]
}

enum ApplicationStage {
  pending
  resume_passed
  assignment_passed
  technical_interview_passed
  technical_assignment_passed
  final_interview_passed
  hired
  notMovedForwardWith
}

model Applications {
  id String @id() @default(uuid())

  applicantProfileId String
  ApplicantProfile   ApplicantProfile @relation(fields: [applicantProfileId], references: [id])
  vacancyId          String
  Vacancy            Vacancy          @relation(fields: [vacancyId], references: [id])
  companyId          String
  Company            Company          @relation(fields: [companyId], references: [id])

  applicationStage ApplicationStage

  createdAt DateTime @default(now())
}
